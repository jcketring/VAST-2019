install.packages("installr"); library(installr)
updateR()
install.packages("xlsx")
library(xlsx)
library(xlsx)
file = "names.xlsx"
read.xlsx(file)
library(xlsx)
library("xlsx")
install.packages("rJava")
library(xlsx)
library(rJava)
library(xlsx)
text = read.xlsx(file)
file = "names.xlsx"
text = read.xlsx(file,1)
View(text)
install.packages("tidyr")
library(tidyr)
text = read.xlsx(file,1,Header = TRUE)
text = read.xlsx(file,1,Header = TRUE)
View(text)
text = read.xlsx(file,1)
out = separate(text,into=c("First Name","Last Name"),sep=" ",extra="merge")
separate(text)
text = as.character(read.xlsx(file,1))
out = separate(text,into=c("First Name","Last Name"),sep=" ",extra="merge")
text = read.xlsx(file,1)
View(text)
out = separate(text,into=c("First Name","Last Name"),sep=" ",extra="merge")
library(xlsx)
text = read.xlsx(file,1)
View(text)
out = separate(text,into=c("First Name","Last Name"),sep=" ",extra="merge")
out = separate(text,col = "Names",into=c("First Name","Last Name"),sep=" ",extra="merge")
View(out)
out = separate(text,col = "Names",into=c("First Name","Last Name"),sep=" ",extra="merge",fill="right")
View(out)
text$Names = stri_reverse(text$Names)
library(stringi)
text$Names = stri_reverse(text$Names)
View(text)
out = separate(text,col = "Names",into=c("First Name","Last Name"),sep=" ",extra="merge")
out$`First Name` = stri_reverse(out$`First Name`)
out$`Last Name` = stri_reverse(out$`Last Name`)
View(out)
out = separate(text,col = "Names",into=c("Last Name","First Name"),sep=" ",extra="merge")
out$`First Name` = stri_reverse(out$`First Name`)
out$`Last Name` = stri_reverse(out$`Last Name`)
View(out)
write.xlsx(out,file,sheetName = "output")
library(ggplot2)
library(lubridate)
library(pwr)
library(dplyr)
library(magrittr)
rm(list = ls())
setwd("C:\\Users\\joket\\Desktop\\VAST\\Granted")
#read csv file into data frame
totalData <- read.csv(file="mc1-reports-data.csv", header=TRUE, sep=",")
n_locations = 19
n_types = 6
#Decide the colors to be associated with each variable measured
bar_colors <- c("Sewer and Water" = "blue",
"Power" = "yellow",
"Roads and Bridges" = "green",
"Medical" = "red",
"Buildings" = "violet",
"Shake Intensity" = "light blue")
library(ggplot2)
library(lubridate)
library(pwr)
library(dplyr)
library(magrittr)
rm(list = ls())
setwd("C:\\Users\\joket\\Desktop\\VAST\\Granted")
#read csv file into data frame
totalData <- read.csv(file="mc1-reports-data.csv", header=TRUE, sep=",")
n_locations = 19
n_types = 6
#Decide the colors to be associated with each variable measured
bar_colors <- c("Sewer and Water" = "blue",
"Power" = "yellow",
"Roads and Bridges" = "green",
"Medical" = "red",
"Buildings" = "violet",
"Shake Intensity" = "light blue")
library(ggplot2)
library(lubridate)
library(pwr)
library(dplyr)
library(magrittr)
rm(list = ls())
setwd("C:\Users\\joket\\Documents\\VAST 2019\\VAST\\VAST-2019\\R")
#read csv file into data frame
totalData <- read.csv(file="mc1-reports-data.csv", header=TRUE, sep=",")
n_locations = 19
n_types = 6
#Decide the colors to be associated with each variable measured
bar_colors <- c("Sewer and Water" = "blue",
"Power" = "yellow",
"Roads and Bridges" = "green",
"Medical" = "red",
"Buildings" = "violet",
"Shake Intensity" = "light blue")
#split data into data frames for each location
divData<-split(totalData, totalData$location, drop = TRUE)
#Make heat map csv
#------------------------------------------------------------------------------------------------------------
#Set which type to make csv for
filename = "roads2.csv"
column = 4
#create empty vectors to populate
score <- matrix(nrow = n_locations*11, ncol = 1)
location <- matrix(nrow = n_locations*11, ncol = 1)
total <- matrix(nrow = n_locations*11, ncol = 1)
k = 1
for(i in 1:n_locations){
for(j in 1:11){
location[k] <- i
score[k] <- j - 1
total[k] <- 0
k = k + 1
}
}
for(i in 1:nrow(totalData)) {
if(is.na(totalData[i,column])==FALSE){
index <- (totalData$location[i] - 1)*11 + totalData[i,column]
total[index] <- total[index] + 1
}
}
heatdata <- data.frame(location, score, total)
#read csv file into data frame
totalData <- read.csv(file="mc1-reports-data.csv", header=TRUE, sep=",")
setwd("C:\Users\\joket\\Documents\\VAST 2019\\VAST\\VAST-2019")
setwd("C:\\Users\\joket\\Documents\\VAST 2019\\VAST\\VAST-2019")
#read csv file into data frame
totalData <- read.csv(file="mc1-reports-data.csv", header=TRUE, sep=",")
n_locations = 19
n_types = 6
#Decide the colors to be associated with each variable measured
bar_colors <- c("Sewer and Water" = "blue",
"Power" = "yellow",
"Roads and Bridges" = "green",
"Medical" = "red",
"Buildings" = "violet",
"Shake Intensity" = "light blue")
#filter out to have one day at a time
#split data into data frames for each location
divData<-split(totalData, totalData$location, drop = TRUE)
#Set which type to make csv for
filename = "roads2.csv"
column = 4
#create empty vectors to populate
score <- matrix(nrow = n_locations*11, ncol = 1)
location <- matrix(nrow = n_locations*11, ncol = 1)
total <- matrix(nrow = n_locations*11, ncol = 1)
k = 1
for(i in 1:n_locations){
for(j in 1:11){
location[k] <- i
score[k] <- j - 1
total[k] <- 0
k = k + 1
}
}
for(i in 1:nrow(totalData)) {
if(is.na(totalData[i,column])==FALSE){
index <- (totalData$location[i] - 1)*11 + totalData[i,column]
total[index] <- total[index] + 1
}
}
heatdata <- data.frame(location, score, total)
View(heatdata)
print(max(heatdata$total))
#Set which type to make csv for
filename = "roads2.csv"
column = 2
#create empty vectors to populate
score <- matrix(nrow = n_locations*11, ncol = 1)
location <- matrix(nrow = n_locations*11, ncol = 1)
total <- matrix(nrow = n_locations*11, ncol = 1)
k = 1
for(i in 1:n_locations){
for(j in 1:11){
location[k] <- i
score[k] <- j - 1
total[k] <- 0
k = k + 1
}
}
for(i in 1:nrow(totalData)) {
if(is.na(totalData[i,column])==FALSE){
index <- (totalData$location[i] - 1)*11 + totalData[i,column]
total[index] <- total[index] + 1
}
}
heatdata <- data.frame(location, score, total)
print(max(heatdata$total))
column = 3
#create empty vectors to populate
score <- matrix(nrow = n_locations*11, ncol = 1)
location <- matrix(nrow = n_locations*11, ncol = 1)
total <- matrix(nrow = n_locations*11, ncol = 1)
k = 1
for(i in 1:n_locations){
for(j in 1:11){
location[k] <- i
score[k] <- j - 1
total[k] <- 0
k = k + 1
}
}
for(i in 1:nrow(totalData)) {
if(is.na(totalData[i,column])==FALSE){
index <- (totalData$location[i] - 1)*11 + totalData[i,column]
total[index] <- total[index] + 1
}
}
heatdata <- data.frame(location, score, total)
print(max(heatdata$total))
column = 4
#create empty vectors to populate
score <- matrix(nrow = n_locations*11, ncol = 1)
location <- matrix(nrow = n_locations*11, ncol = 1)
total <- matrix(nrow = n_locations*11, ncol = 1)
k = 1
for(i in 1:n_locations){
for(j in 1:11){
location[k] <- i
score[k] <- j - 1
total[k] <- 0
k = k + 1
}
}
for(i in 1:nrow(totalData)) {
if(is.na(totalData[i,column])==FALSE){
index <- (totalData$location[i] - 1)*11 + totalData[i,column]
total[index] <- total[index] + 1
}
}
heatdata <- data.frame(location, score, total)
print(max(heatdata$total))
column = 5
#create empty vectors to populate
score <- matrix(nrow = n_locations*11, ncol = 1)
location <- matrix(nrow = n_locations*11, ncol = 1)
total <- matrix(nrow = n_locations*11, ncol = 1)
k = 1
for(i in 1:n_locations){
for(j in 1:11){
location[k] <- i
score[k] <- j - 1
total[k] <- 0
k = k + 1
}
}
for(i in 1:nrow(totalData)) {
if(is.na(totalData[i,column])==FALSE){
index <- (totalData$location[i] - 1)*11 + totalData[i,column]
total[index] <- total[index] + 1
}
}
heatdata <- data.frame(location, score, total)
print(max(heatdata$total))
